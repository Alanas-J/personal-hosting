logging {
  level  = "info"
  format = "logfmt"
}

// Defining a Loki destination for Alloy to push.
loki.write "local_loki_write" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"

    // If HTTP BasicAuth was used:
    // basic_auth {
    //  username = "admin"
    //  password = "admin"
    // }
  }
}

prometheus.remote_write "local_prometheus_write" {
    endpoint {
        url = "http://prometheus:9090/api/v1/write"

        // basic_auth {
        //   username = "admin"
        //   password = "admin"
        // }
    }
}

// =================================== File Log Collection ==================================
// Defining a file scan pattern for logs in /var/log.
local.file_match "local_files" {
    path_targets = [{"__path__" = "/var/log/**/*.log"}]
    sync_period = "5s"
}

// Adding path label to file targets
discovery.relabel "local_files_labelled" {
  targets    = local.file_match.local_files.targets

  rule {
    source_labels = ["__path__"]
    target_label  = "filename"
  }
}

// Defining a log scrape of the scanned log files.
loki.source.file "local_log_scrape" {
  targets    = discovery.relabel.local_files_labelled.output
  forward_to = [loki.process.local_pre_process.receiver]
  tail_from_end = true
}

// Processing step / middleware before sending logs to Loki. Currently adds a src label. 
loki.process "local_pre_process" {
  stage.static_labels {
      values = {
        log_source = "file_logs",
      }
   }
  forward_to = [loki.write.local_loki_write.receiver]
}

// ================================= Docker Log Collection ===================================
// Search for Docker containers in socket.
discovery.docker "local_docker_socket" {
  host = "unix:///var/run/docker.sock" 
}

// Extracting target metadata for log labelling
discovery.relabel "local_docker_target" {
  targets = discovery.docker.local_docker_socket.targets

  rule {
    source_labels = ["__meta_docker_container_name"]
    target_label = "container"
  }
}

// Defining a log scrape of the docker socket output.
loki.source.docker "local_docker_scrape" {
  host       = "unix:///var/run/docker.sock"
  targets    = discovery.relabel.local_docker_target.output
  labels     = {"log_source" = "docker_socket"}
  forward_to = [loki.process.local_docker_log_process.receiver]
}

// Pre-processing before docker log send.
loki.process "local_docker_log_process" {
  stage.docker {}
  forward_to = [loki.write.local_loki_write.receiver]
}

// ================================= Metric Collection ===================================

// node_exporter via alloy
prometheus.exporter.unix "local_system_metrics" { }

prometheus.scrape "local_system_metrics_scrape" {
  targets         = prometheus.exporter.unix.local_system_metrics.targets
  forward_to      = [prometheus.remote_write.local_prometheus_write.receiver]
  scrape_interval = "60s"
}


// https://grafana.com/docs/alloy/latest/reference/components/prometheus/prometheus.exporter.cadvisor/
prometheus.exporter.cadvisor "local_docker_metrics" {
  docker_host = "unix:///var/run/docker.sock"

  storage_duration = "5m"
}

// Configure a prometheus.scrape component to collect cadvisor metrics.
prometheus.scrape "scraper" {
  targets    = prometheus.exporter.cadvisor.local_docker_metrics.targets
  forward_to = [ prometheus.remote_write.local_prometheus_write.receiver ]
}
