# A minimal stack for getting Grafana Log and Metric monitoring in a docker-compose deployment.
# TODO: Need to front the grafana stack with auth / route through Traefik + remove port exposing
# TODO: Look into Grafana/loki/prometheus config further

networks:
  grafana: {
    external: true
  }

volumes:
  grafana_dashboard_storage: {}
  loki_storage: {}
  prometheus_storage: {}

services:
  grafana:
    image: grafana/grafana:12.0.0
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    volumes:
     - ./config/grafana/grafana.ini:/usr/local/etc/grafana/grafana.ini:ro
     - ./config/grafana/grafana-data-sources.yml:/etc/grafana/provisioning/datasources/ds.yaml:ro
     - grafana_dashboard_storage:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - grafana
    restart: unless-stopped

  loki:
    image: grafana/loki:latest # Couldn't find
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - loki_storage:/loki
      - ./config/grafana/loki-config.yml:/etc/loki/config.yaml:ro
    ports:
      - 3100:3100
    networks:
      - grafana
    restart: unless-stopped

  alloy:
    image: grafana/alloy:v1.8.3
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    volumes:
      - ./config/grafana/alloy-config.alloy:/etc/alloy/config.alloy:ro
      # Host system log dir for scraping.
      - /var/log/:var/log/host_logs:ro
      # Docker socket, for cadvisor metrics and to scrape docker logs.
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Host volumes needed for node_exporter to provide all metrics:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - 12345:12345
    networks:
      - grafana
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v3.3.1
    command:
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/grafana/prometheus-config.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_storage:/prometheus
    ports:
      - "9090:9090"
    networks:
    - grafana
    restart: unless-stopped
